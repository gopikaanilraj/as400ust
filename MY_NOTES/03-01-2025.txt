03-01-2025
*******************************************************************************************************
CL(control language) (no position specific parameters)
--------------------

source file -- QCLSRC
source type -- CLP

No direct command to update, delete, insert, into file , it will jst read.

start of pgm                                  PGM

file declaration                             DCLF<filename> (no need to mention type, I/o etc) command   
variable declaration                         DCL command

processing                                   CHGVAR

end of pgm                                   ENDPGM

(PGM & ENDPGM -- not mandatory --- technically req when u r gonna accept params)

Variable read using & (eg : &a, &b)
No need of label

dspmsg command to display msg directly


*******************************************************************************************
14-01-2025
*******************************************************************************************
                     RPGLE                                  CLP
STRT of pgm                                                pgm (not mandatory)  
file declaration     F-spec                                DCLF
variable             D-- var a,b,                          dcl--&a,&b
operations           C - eval                              chgvar
end of pgm           *inlr or return                       ENDPGM
params               plist                                 accept in pgm command
error handling       monitor or %error()                   monmsg command
concat string        eval str = a+b                        chgvar &str value(a||b) [or *cat(concatenates as it is),*tcat(truncate blanks at the end of 1st string),*bcat(add 1 space at the end of first string and then concatenate--> chgvar &c value(&a *cat &b]    

*NE not eql to
*AND 
*OR

Debugging
Source options : not *source give *srcdbg
In strdbg--> give update prod files and opm source also yes


File dclaration-->DCLF
READ --> RCVF
DOWHILE, DOUNTIL, DOFOR
monmsg for eof() --> CPF0864
OVRDBF

1. Overriding file --> rpg --> EXTFILE
2.            members --> rpg --> EXTMBR
3.            attributes --> 

creating logical files in clp --> OPNQRYF

take city as param in cl program-call rpgle to print empname-to call report



*******************************************************************************************************
06-01-2025
*******************************************************************************************************
ARRAYS
------

While definition, give keyword as 'dim' , ie., dimension, eg : dim(10)[called runtime array]
runtime array loaded while runtime
preruntime array - FOR loadig from an array
compile time loaded to objs while compile time

EVAL  array1(1) = 'a'
In as400 index starts from 1 not 0(here 0 is invalid)

Common use - inclusion or exclusion details to be loaded from setup file -instead of using if cond they look up in the array


to view all the elements :

           FOR        I=I TO 10 BY 1
 array(i)  DSPLY
           EVAL       I=I+1
 array(i)  DSPL 
           ENDFOR   


To search elements :

          EVAL       I = %LOOKUP('A' : array1)
 I        DSPLY
         

To sort arrays :
          SORTA


          EVAL       sum=%FOOT(array1)
  sum     DSPLY

For compile time :
add to keywords CTDATA
eg :  DIM(10)ctdata 

1ST 2 columns give **


2D arrays definition :
DIM(10)ctdata PERRCD(2)


DATA STRUCTURES
---------------

In place of standalone give DS

Fileinn lookup

*******************************************************************************************************
07-01-2025
*******************************************************************************************************
External data str

Program status ds (any name as u wish) at prgm lvl
S/U --> S (stands for status ds)


File info DS
------------

PREFIX() INFDS(EMPDS)

1. Normal ds
2. External (Extname keyword) -- contains program status/exception tec
3. Program status
4. File ds (file lvl keyword --- INFDS) [minimum RRN/first RRN]
5. Multi occurance DS-- defined by keyword OCCURS(no. of elements) %OCCUR(DS)=2 [FOR INPUT AND OUTPUT same built in fn occurs]
6. Indicator DS (not in syllabus)
7. 

DS can be made array data str by using 'dim' and 'qualified' keyword / use 'qualified' directly
EVAL ds(2).sub1 = 
1ST clear the array else, will be occupied by junk -- use CLEAR opcode

***************************************************************************************************
08-01-2025
***************************************************************************************************

Preruntime array --> Defenition of flatfile -->> designation T, file format--F,specify record length, device -- disk 
--> Array - always declaration S keyword -- dim(5) fromfile(flatfile)

**************************************************************************
10-01-2025
*************************************************************************
COPYBOOK IN OTHER SOURCE FILES
/copy <libname>/<sourcename>,<membername>
eg : /copy *libl/qrpglesrc, copybook
there is also /include(same purpose)

to create report using ospec --> except keyword
CRTPRTF FILENAME --> F4--> SOURCE NONE ITSELF

SKIPA(2) --> skips to the specified line number 2 after printing

DSPMODSRC
*INZSR


**************************************************************************************
13-01-2025
**************************************************************************************
free format rpgle

HDATFMT(*MDY)
DDADTE   D    INZ()
/FREE(NOT MANDATORY IN OUR VERSION...giving semicolon is enough)
DATE1 =%DATE(CHAR1);  syntax : (<varname>:<fmt_char1_is_holding>[append 0 with this if the value inz is without seperators])
DSPLY DATE;
*inlr='1';
/END-FREE
